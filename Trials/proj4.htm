<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">

<head>
<meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
<title>proj4.htm</title>
<script type="text/javascript">
patchSize=256;
zoomlevel=0;
imageSize= Math.pow(2, zoomlevel)*patchSize;
var height=0;
var width=0;

var imgpsz = { x: 256, y: 256};
// Image Prototype
// objects created by:
//     var img = new SVImage( <url>, <xs>, <ys>, <zs>);

function SVImage( url, xs, ys, zs) {
    this.url = url;
    this.xs = xs;
    this.ys = ys;
    this.zs = zs;
}

SVImage.prototype.getUrl = function () {
    return this.url;
}

SVImage.prototype.getXs = function () {
    return this.xs;
}
SVImage.prototype.getYs = function () {
    return this.ys;
}
SVImage.prototype.getZs = function () {
    return this.zs;
}


// Image Point Prototype
// objects created by:
//     var imgpt = new SVImagePoint( <image>, <x>, <y>, <z>);

function SVImagePoint( img, xloc, yloc, zloc) {
    this.image = img;
    this.x = xloc;
    this.y = yloc;
    this.z = zloc;
}

// Viewing Window Prototype
// objects created by:
//     var imgpt = new Vieww( <image-point>, <xs>, <ys>, <zs>);

function Vieww( imgpnt, xs, ys, zs) {
    this.imgpnt = imgpnt;
    this.xs = xs;
    this.ys = ys;
    this.zs = zs;
}

// Image Patch Prototype
// objects created by:
//     var ptch = new SVImagePatch( <image>, <x>, <y>, <z>, <zoom>);

function SVImagePatch( img, xind, yind, zind, zoom) {
    this.image = img;
    this.xind = xind;
    this.yind = yind;
    this.zind = zind;
    this.zm = zoom;
}

// Image Patch Point Prototype
// objects created by:
//     var ptch = new PatchPoint( <patch>, <x>, <y>);

function PatchPoint( patch, xloc, yloc) {
    this.patch = patch;
    this.x = xloc;
    this.y = yloc;
}


// Viewing Window Point Prototype
// objects created by:
//     var imgpt = new ViewPoint( <view-wnd>, <x>, <y>);

function ViewPoint( vw, xloc, yloc) {
    this.vw = vw;
    this.x = xloc;
    this.y = yloc;
}


// Initializations 
//
//

var img = new SVImage;

var imagePoint = new SVImagePoint;

var vwcorner=new SVImagePoint;
var vw = new Vieww;
vw.imgpnt=vwcorner;
vw.imgpnt.x = 0;
vw.imgpnt.y = 0;
var patchPoint = new PatchPoint;

var vwPoint0 = new ViewPoint;
var vwPoint1 = new ViewPoint;

var patch = new SVImagePatch;
patch.xind = 1;
patch.yind = 1;


var zoomlevel = 0;
var MaxZoom = 4; /*  0,1,2,3,4*/
var row=0;
var col=0;
var number=0;
var head="Test%20Images/foo."; /*File name operation */
var tail = ".jpeg";

var top = 0;   /*the visible window that cropped, its size affects the Zoomoffset function*/
var right = 0;
var bottom = 0;
var left = 0;

var tleft =200	;
var ttop =150;

var dx = 0;
var dy = 0;

var YGridNumber = 1; 
var XGridNumber = 1;

function change() {//change happens to viewing window and grid patches. 
	document.getElementById("VW").style.height=document.getElementById("text1").value + "px";
	document.getElementById("VW").style.width=document.getElementById("text2").value + "px";
 	bottom=document.getElementById("text1").value;
 	right=document.getElementById("text2").value;
 	document.getElementById("patchGrid").style.height=Math.ceil(bottom/256)*256;
 	document.getElementById("patchGrid").style.width=Math.ceil(right/256)*256;
 	document.getElementById("patchGrid").style.clip="rect(" + top + "px " + right + "px " + bottom + "px " + left + "px)";
}

var row=0;
var col=0;

function gridFormation() {
//     number = Math.pow(4, zoomlevel);
//     row = col = Math.pow(2, zoomlevel);
 row=Math.ceil(bottom/patchSize);
 col=Math.ceil(right/patchSize);
 zoomlevel=document.getElementById("text3").value;
 
	for (i=1;i<=row;i++)
	{ 
		for (j=1;j<=col;j++)
		{
		dummy=document.createElement("img");
		dummy.id="img"+i+j;
		dummy.height=patchSize;
		dummy.width=patchSize;
		dummy.src="http://wonko.via.cornell.edu/bigimgs/test1/foo."+ zoomlevel + "." +( j -1)+ "." + (i-1) + ".0.jpeg";
		document.getElementById("patchGrid").appendChild(dummy);
		}
	}
}

function ResetGridFormation() {
	//document.getElementById('patchGrid').reset();
}

function trial_ondragstart(event) {
    CooX0 = event.clientX;
    CooY0 = event.clientY;
}
function trial_ondrag(event, trial) {
    CooX1 = event.clientX;
    CooY1 = event.clientY;

    dx = CooX1 - CooX0;
    dy = CooY1 - CooY0;
    CooX0 = CooX1;    /*update frame*/
    CooY0 = CooY1;

    if (dx != 0 || dy != 0)
    { CommitMove(trial); }

    vw.imgpnt.x = vw.imgpnt.x - dx; // coordinates of view windox x,y changes with zooming
    vw.imgpnt.y = vw.imgpnt.y - dy;

}
function trial_ondragend() {
    dx = 0;
    dy = 0;
}
function CommitMove() {
	if(dx<=256&&dy<=256)  // if dx or dy >256, first load new images and than "simulate" a panning
	{                           // since we only have one extra padding image layer.
		right = right - dx;
		left = left - dx;
	    top = top - dy;
	    bottom = bottom - dy;
	
	    tleft = parseInt(document.getElementById('patchGrid').style.left) + dx;
	    document.getElementById('patchGrid').style.left = tleft + 'px';
	    ttop = parseInt(document.getElementById('patchGrid').style.top) + dy;
	    document.getElementById('patchGrid').style.top = ttop + 'px';
	
	    document.getElementById('patchGrid').style.clip = "rect(" + top + "px " + right + "px " + bottom + "px " + left + "px)";
	}
}

</script>
</head>

<body>
<div  id="patchGrid" style="border: thin none #000000; position: absolute; width: 512px; height: 512px; z-index: 1; left: 200px; top: 150px"
        ondragstart="trial_ondragstart(event)"
        ondrag="trial_ondrag(event,patchGrid)"
        ondragend="trial_ondragend()"
>
</div>

<form method="post">
	<input id="text1"name="Height" type="text" value="80" />
	<input id="text2" name="Width" type="text"  onchange="change()" value="80" />
	<input id="text3" name="Zoomlevel" type="text" onchange="ResetGridFormation();gridFormation()"/>
</form>

<p><b>proj4.htm</b> - please press enter key after typing number in text box.</p> 
<ul>
	<li>system defines and manages the number of patches needed to cover the viewing window</li>
	<li>when zoom > 0 loads patches to fill viewing window</li>
	<li>[patches are joined together like a single image]</li>
</ul>

<div  id="VW" style="border: thin #FF00FF solid; position: absolute; width: 50px; height: 50px; z-index: 1; left: 200px; top: 150px" id="layer1">
</div>
</body>
</html>